const Koa = require('koa')
const bodyParser = require('koa-body')
const json = require('koa-json')
const config = require('./config')
const cors = require('kcors')

const https = require('https')
const path = require('path')
const fs = require('fs')

const auth = require('./routes/auth')
const allUsers = require('./routes/allUsers')
const town = require('./routes/town')
const client = require('./routes/client')
const order = require('./routes/order')
const product_name = require('./routes/product_name')
const firm_name = require('./routes/firm_name')
const opt_price = require('./routes/opt_price')
const mas_number = require('./routes/mas_number')
const pith = require('./routes/pith')
const allSelers = require('./routes/allSelers')
const managerMoney = require('./routes/managerMoney')
const allMoney = require('./routes/allMoney')
const clientDebt = require('./routes/clientDebt')
const region = require('./routes/region')
const area = require('./routes/area')
const personal_expenses = require('./routes/personal_expenses')
const pith_name = require('./routes/pith_name')
const note = require('./routes/note')
const comment = require('./routes/comment')
const prepareOrders = require('./routes/prepareOrders')
const prepareOrderComments = require('./routes/prepareOrderComments')

const app = new Koa()
app.use(bodyParser())
app.use(json())
app.use(cors())

app.use(auth.routes())
app.use(allUsers.routes())
app.use(town.routes())
app.use(client.routes())
app.use(order.routes())
app.use(product_name.routes())
app.use(firm_name.routes())
app.use(opt_price.routes())
app.use(mas_number.routes())
app.use(pith.routes())
app.use(allSelers.routes())
app.use(managerMoney.routes())
app.use(allMoney.routes())
app.use(clientDebt.routes())
app.use(region.routes())
app.use(area.routes())
app.use(personal_expenses.routes())
app.use(pith_name.routes())
app.use(note.routes())
app.use(comment.routes())
app.use(prepareOrders.routes())
app.use(prepareOrderComments.routes())

const ssl = {
    key: fs.readFileSync('./cert/key.pem', 'utf8'),
    cert: fs.readFileSync('./cert/cert.pem', 'utf8'),
}

https.createServer(ssl, app.callback()).listen(config.PORT)

// app.listen(config.PORT, () => {
//     console.log(`Server listening on port ${config.PORT}`)
// })